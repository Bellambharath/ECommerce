
public List<string> Consumer()

        {

            string topic = txt_topicname.Text;

            List<string> messages = new List<string>();

 

            using (var c = new ConsumerBuilder<Null, string>(new ConsumerConfig

            {

                BootstrapServers = "localhost:9092",

                //GroupId = "console-consumer-83024",

                GroupId = "gid-consumers",

                AutoOffsetReset = AutoOffsetReset.Latest

            }).Build())

            {

                c.Subscribe(topic);

 

                CancellationTokenSource cts = new CancellationTokenSource();

                Console.CancelKeyPress += (_, e) =>

                {

                    e.Cancel = true;

                    cts.Cancel();

                };

 

                try

                {

 

                    while (true)

                    {

                        var cr = c.Consume(cts.Token);

                        messages.Add(cr.Message.Value.ToString());

 

                        var timeout = TimeSpan.FromSeconds(5);

 

                        var watermarkOffsets = c.QueryWatermarkOffsets(new TopicPartition(topic, cr.Partition), timeout);

 

                        //txt_messagefromkafka.Text=watermarkOffsets.Low.Value.ToString();

                        //MessageBox.Show($"low val{watermarkOffsets.Low.Value.ToString()}");

                        //MessageBox.Show($"high val{watermarkOffsets.High.Value.ToString()}");

                        var remainingMessages = watermarkOffsets.High - cr.Offset.Value - 1;

                        if (remainingMessages == 0)

                        {

                            cts.Cancel();

                        }

                    }

                }

                catch (OperationCanceledException)

                {

                    c.Close();

                }

            }

 

            return messages;

        }